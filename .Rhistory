pamk(m[1:10,])
m[1:10,]
pamk(m[1:20,])
?sample
sample(1:3, 1, replace=TRUE)
sample(1:100, 1, replace=TRUE)
sample(1:100, 10, replace=TRUE)
which(m,sample(1:100,10,replace=FALSE))
which(m=sample(1:100,10,replace=FALSE))
?which
m[sample(1:100, 10, replace=TRUE)]
sample(1:100, 10, replace=TRUE)
m[sample(1:100, 10, replace=TRUE)]
m[sample(1:100, 10, replace=TRUE),]
m[sample(1:100, 10, replace=TRUE),]
m[sample(1:100, 20, replace=TRUE),]
pamk(m[sample(1:100, 20, replace=TRUE),])
pamk(m[sample(1:100, 20, replace=TRUE),1])
rs.fc=m[sample(1:100, 20, replace=TRUE),1]
cl=pamk(rs.fc)
cl.
cl
cl$pamobject
cl$pamobject$clustering
as.matrix(cl$pamobject$clustering)
m[as.matrix(cl$pamobject$clustering)]
m[as.matrix(cl$pamobject$clustering),]
rs.fc
rs
rs.fc
cl
cl$pamobject$clustering
rs.fc
cl=pamk(rs.fc,krange=3)
cl
cl$pamobject$clustering
rs.fc
x=c(-0.38848247,0.21655804,-1.08211969,0.00369104,0.0993393,0.25531731,
1.40574444,-1.80271115,-0.58780605,-0.35026458,0.67197532,-1.29654652,
-0.58874467,-0.4004176,1.46242829,0.83946654,-0.24861179,-1.604154,
1.53555232,1.45589014,-0.52092604,1.65504054,0.12854317,1.66771236,
1.47964458,-1.55677722,-0.40070632,-0.41957953,0.37803884,0.45349904,
1.18265468,1.43979945,-1.55395031,0.01054229,0.48887945,0.12949194,
-0.40283111,1.2998402,-1.02205575,-0.34370088,0.22117962,0.52840463,
-0.9584811,1.22482249,-1.51189671,0.372597,1.68446854,-0.74440632,
1.33920212,0.18072373,-0.35813474,0.39400846,1.18971633,1.02192759,
-1.90422461,0.18459334,0.18096905,-1.73870267,1.57349896,-1.05632536,
0.1864611,-1.49696658,0.51070568,-2.25007651,-0.64768552,1.80404194,
2.25164576,-0.07925576,-0.83550267,-1.65513631,0.25913869,0.36030077,
-0.09006407,-1.64359237,-0.1312756,-0.13790883,-0.09940115,-0.02089164,
-0.60924589,-0.05451811,2.11736111,-1.40329353,-0.71788744,-0.45888623,
-0.75608368,0.45762458,-0.24299548,-0.29224218,-1.0488731,-0.62028903,
-0.08257067,0.92297771,0.2964071,-0.02598973,-0.20439059,-0.25195469,
0.20572878,-0.49343988,0.25886695,1.20595313)
?structure
x
length(x)
density(x)
dty<-density(x)
class(dty)
?density
plot(dty)
plot(c)
c
x
plot(x)
plot(x,type="bar")
plot(ordered(x))
order(x)
ordered(x)
?order
?ordered
order(x)
x
order(c(3,1,2))
?order
order(c(3,1,2),decreasing=FALSE)
order(c(3,1,2),decreasing=TRUE)
?order
sort(x)
plot(sort(x))
plot(dty)
dty$bw
dty
plot(dty)
?nls
?do.call
?image
x<-c(5,3,1)
y<-c(99,5,15)
z<-(17,25,1)
z<-c(17,25,1)
image(x,y,z)
y<-c(10,45,99)
x<-c(1,33,56)
x
y
z<-c(17,25,83)
z
image(x,z,z)
z<-as.matrix(z)
z
image(x,z,z)
z(c(15,29,35,66), nrow=2, ncol=2)
z<-as.matrix(c(15,29,35,66), nrow=2, ncol=2)
z
z<-as.matrix(data.fram(c(15,29,c(35,66)), nrow=2, ncol=2)
z<-as.matrix(data.frame(c(15,29,c(35,66))), nrow=2, ncol=2)
z
z<-as.matrix(data.frame(c(15,29),c(35,66)), nrow=2, ncol=2)
z
image(x,z,z)
z<-as.matrix(data.frame(c(15,29,59),c(35,66,87)), nrow=2, ncol=2)
image(x,z,z)
x
z
x
y
?image
seq(3,4,5)
?seq
seq(1,3)
image(seq(1,3),seq(1,3),z)
z
image(seq(1,3),seq(1,3),z)
z[1,1]=28
z
image(seq(1,3),seq(1,3),z)
library(tm)
data<-read.csv("o.csv")
str(data)
summary(data)
names(data)
data<-read.csv("o.csv")
names(data)
data$t
data$d
d<-data
plot(d$d)
plot(d$d)
?ts
ts(d$d)
d.ts<-ts(d$d)
d.ts
d
d$d
d.ds<-ts(d$d, frequency=12)
d.ds
plot.ts(d.ts)
d.ds
plot.ts(d.ds)
d.ds<-ts(d$d, frequency=52)
plot.ts(d.ds)
d.ds
plot.ts(d.ss)
plot.ts(d.ts)
d.ts
d.ts[1:3]
d.ts[1:50]
d.ts[1,]
d.ts[1]
str(d)
d.c <- d
?as.POSIXct
as.POSIXct(d$d)
as.POSIXct.date(d$d)
as.POSIXct.default(d$d)
str(d)
strftime(d$d, "%d.%M.%Y, %H:%m")
?strftime
strftime(d$d, format="%d.%M.%Y, %H:%m")
?strftime
strptime(d$d, format="%d.%M.%Y, %H:%m")
strptime(d$d, format="%d.%m.%Y, %H:%M")
d.c<-strptime(d$d, format="%d.%m.%Y, %H:%M")
d.c[1]
class(d.c[1])
plot(d.c)
d.c<-d
d.c$d<-strptime(d$d, format="%d.%m.%Y, %H:%M")
head(d.c)
head(d.c$d)
head(d$d)
plot.ts(d.c)
plot.ts(d.c$d)
plot.ts(d.c$u)
plot(d)
plot(d.c)
plot(d.c$u)
table(d$u)
head(table(d$u))
sort(table(d$u))
plot(sort(table(d.c$d)))
table(d.c$d)
d.bm<-format.Date(d.c$d, format="%Y-%m")
d.bm
plot(d.bm)
barplot(d.bm)
barplot(d.bm, na.rm=TRUE)
plot(d.bm, na.rm=TRUE)
plot(max(d.bm, na.rm=TRUE))
plot(max(d.bm, na.rm=TRUE), type='h')
ma(d.bm,na.rm=TRUE)
max(d.bm,na.rm=TRUE)
d.c$d[!is.na[d.c$d]
d.c$d[!is.na[d.c$d]]
d.c$d[!is.na(d.c$d)]
plot(d.c$d[!is.na(d.c$d)])
d.bm<-d.c$d[!is.na(d.c$d)]
d.bm
plot(d.c$d[!is.na(d.c$d)])
plot(d.c$d[!is.na(d.c$d)], type="h")
plot(x=d.c$d[!is.na(d.c$d)], type="h")
plot(as.data.frame(d.c$d[!is.na(d.c$d)]), type="h")
plot(as.data.frame(d.c$d[!is.na(d.c$d)]), type="h")
format.Date(d.c$d, format="%Y-%m")
format.Date(d.bm, format="%Y-%m")
d.bm<-format.Date(d.bm, format="%Y-%m")
plot(d.bm)
plot(d.bm, type="h")
type(d.bm)
class(d.bm)
d.bm<-as.data.frame(d.bm)
plot(d.bm, type="h")
?plot
plot(d.bm)
library(tm)
Corpus(d.c)
Corpus(VectorSource(d.c))
d.corp<-Corpus(VectorSource(d.c))
d.corp
d.corp[1]
str(d.corp)
d.corp[[1]]
my.corpus=d.corp
my.rm.ws=tm_map(my.corpus,stripWhitespace)
my.rm.tl=tm_map(my.corpus,tolower)
my.rm.tl=tm_map(my.rm.ws,tolower)
my.rm.sw=tm_map(my.rm.tl,removeWords,stopwords("english"))
my.rm.stem=tm_map(my.rm.sw,stemDocument)
install.packages("snowball")
library(tm)
?load
load()
library(tm)
library(Snowball)
df<-read.csv("o.csv")
corp<-Corpus(DataframeSource(df))
corp
str(corp)
str(corp[1])
library(tm)
library(Snowball)
?DocumentTermMatrix
?termFreq
?scale
load(".RData")
my.nostop
library(Snowball)
library(tm)
stemDocument(my.nostop0
stemDocument(my.nostop)
my.nostop[2]
my.nostop[3]
TermDocumentMatrix(my.nostop[3])
TermDocumentMatrix(my.nostop[5])
my.stripped
my.stripped[1]
TermDocumentMatrix(my.stripped[1])
TermDocumentMatrix(my.stripped[10])
library(tm)
library(Snowball)
m.corpus <- Corpus(VectorSource(d.c$b))
m.corpus
m.corpus[1]
inspect(m.corpus[1])
m.stripped <- tm_map(tm_map(tm_map(m.corpus, removePunctuation), stripWhitespace), tolower)
m.nostop <- tm_map(m.stripped, removeWords, stopwords("english"))
inspect(m.nostop[1])
save.image()
m.stem=tm_map(m.nostop,stemDocument)
save.image()
m.dtm <- DocumentTermMatrix(m.stem)
m
m.dtm
save.image()
findFreqTerms(m.dtm)
head(findFreqTerms(m.dtm))
findFreqTerms(m.dtm)[1:50]
findFreqTerms(m.dtm, 50)
findFreqTerms(m.dtm, 30)
save.image()
findAssocs(m.dtm, "basel")
findAssocs(m.dtm, "basel", 0.8)
findAssocs(m.dtm, "basel", 0.5)
findAssocs(m.dtm, "bed", 0.8)
findAssocs(m.dtm, "bed", 0.1)
findAssocs(m.dtm, "bed", 0.5)
findAssocs(m.dtm, "bed", 0.4)
findAssocs(m.dtm, "ikea", 0.4)
findAssocs(m.dtm, "ikea", 0.3)
findAssocs(m.dtm, "basel", 0.4)
findAssocs(m.dtm, "basel", 0.3)
findAssocs(m.dtm, "basel", 0.2)
findAssocs(m.dtm, "computer", .4)
findAssocs(m.dtm, "pc", .4)
findAssocs(m.dtm, "laptop", .4)
findAssocs(m.dtm, "laptop", .5)
findAssocs(m.dtm, "mattress", .5)
findAssocs(m.dtm, "mattress", .4)
m.dtm2 <- removeSparseTerms(m.dtm, .4)
findFreqTerms(mm.dtm2, 50)
findFreqTerms(m.dtm2, 50)
findFreqTerms(m.dtm2, 40)
findFreqTerms(m.dtm2, 10)
findFreqTerms(m.dtm2, 1)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .2)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .1)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .9)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .8)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .6)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .7)
m.dtm2
findFreqTerms(m.dtm2,30)
findFreqTerms(m.dtm2,20)
findFreqTerms(m.dtm2,10)
findFreqTerms(m.dtm2,50)
findFreqTerms(m.dtm2,3)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .8)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .9)
m.dtm2
m.dtm
m.dtm2
inspect(m.dtm2)
findFreqTerms(m.dtm2,1)
save.image()
m.dict<-Dictionary("bed", "chair", "mattress", "cat", "animal", "food", "closet", "bike", "carpet", "wardrobe", "shirt", "skirt")
m.dict<-Dictionary(c("bed", "chair", "mattress", "cat", "animal", "food", "closet", "bike", "carpet", "wardrobe", "shirt", "skirt"))
m.dtm2
findFreqTerms(m.dtm2,1)
findFreqTerms(m.dtm2,5)
findFreqTerms(m.dtm2,10)
findFreqTerms(m.dtm2,20)
findAssocs("bed", .5)
findAssocs(m.dtm2, "bed", .5)
findAssocs(m.dtm2, "bed", .4)
findAssocs(m.dtm2, "bed", .3)
findAssocs(m.dtm2, "bed", .2)
save.image()
n.df
library(Snowball)
library(tm)
n.dtm2 <- removeSparseTerms(n.dtm,.93)
n.dtm2
n.dtm
n.dtm2 <- removeSparseTerms(n.dtm,.9)
n.dtm2
(n.dtm2 <- removeSparseTerms(n.dtm,.99))
(n.dtm2 <- removeSparseTerms(n.dtm,1))
(n.dtm2 <- removeSparseTerms(n.dtm,.9999))
(n.dtm2 <- removeSparseTerms(n.dtm,.99))
(n.dtm2 <- removeSparseTerms(n.dtm,.999))
(n.dtm2 <- removeSparseTerms(n.dtm,sparse=.999))
(n.dtm2 <- removeSparseTerms(n.dtm,sparse=.95))
(n.dtm2 <- removeSparseTerms(n.dtm,sparse=.98))
n.dtm
n[1]
n.dtm[1]
n.dtm2
load(".RData")
n.dtm2
n.dtm <- DocumentTermMatrix(n.stem)
(n.dtm2 <- removeSparseTerms(n.dtm, .95))
save.image()
n.df <- as.data.frame(inspect(n.dtm2))
n.df
str(n.df)
n.df[1]
n.df[2]
nrow(n.df)
(n.dtm2 <- removeSparseTerms(n.dtm, .9))
(n.dtm2 <- removeSparseTerms(n.dtm, .93))
n.df <- as.data.frame(inspect(n.dtm2))
n.df <- []
n.df <- c()
n.df
n.df <- as.data.frame(inspect(n.dtm2))
str(n.df)
n.scaled <- scale(n.df)
n.dist <- dist(n.scaled, method="euclidean")
n.fit <- hclust(n.dist, method="ward")
save.image()
plot(n.fit)
?hclust
par(mfrow=c(3,1))
str(n.dist)
n.dist[1]
n.dist[2]
ncol(n.dist)
head(n.dist)
n.dist[1:50]
plot(hclust(n.dist[1:50], method="ward")
plot(hclust(n.dist[1:50], method="ward"))
plot(hclust(n.dist, method="ward"))
plot(hclust(n.dist, method="ward"))
n.dtm2$v
n.dtm2$i
n.dtm2$j
n.stem
n.grps <- cutree(n.fit, 3)
n.grps
?hclust
?dist
head(n.df)
USArrests
hclust(cutree(n.fit, n=5))
hclust(cutree(n.fit, k=5))
plot(cutree(n.fit, k=5))
plot(hclust(USArrests, method="ward"))
plot(hclust(dist(USArrests), method="ward"))
n.tdm <- TermDocumentMatrix(n.stem)
(n.tdm2 <- removeSparseTerms(n.tdm, .93))
n.df <- as.data.frame(inspect(n.tdm2))
str(n.df)
n.scaled <- scale(n.df)
n.dist <- dist(n.scaled, method="euclidean")
n.dist
n.fit <- hclust(n.dist, method="ward")
plot(n.fit)
n.dist
save.image()
library(cluster)
n.pam <- pam(n.dist, 5)
plot(n.pam)
n.pam
names(n.pam)
names(n.dist)
names(n.df)
n.df$3691
n.df$`3691`
n.pam$clustering
plot(n.pam$clustering)
zp.raw <- read.csv("zhaopin_output.csv")
str(zp.raw)
zp.raw <- read.csv("zhaopin_output.csv")
str(zp.raw)
head(table(zh.raw$usr))
head(table(zp.raw$usr))
head(sort(table(zp.raw$usr)))
head(order(table(zp.raw$usr)))
order(table(zp.raw$usr))
table(zp.raw$usr)
tab<-table(zp.raw$usr)
tab[order()]
tab[order(2)]
tab[order(1)]
tab[order(tab)]
qz.df <- read.csv("qiuzhi_text.segmented.csv")
qz.df <- read.csv("my/qiuzhi_text.segmented.csv")
qz.df <- read.csv("my/qiuzhi_text.segmented.csv")
library(Snowball)
library(tm)
qz.c <- Corpus(DataframeSource(qz.df))
inspect(qz.c[1])
qz.c <- Corpus(DataframeSource(qz.df$1))
qz.c <- Corpus(DataframeSource(qz.df$b))
qz.c <- Corpus(VectorSource(qz.df$b))
inspect(qz.c[1])
inspect(qz.c[2])
qz.df <- read.csv("my/qiuzhi_text.segmented.csv", sep="|")
qz.df <- read.csv("my/qiuzhi_text.segmented.csv", sep="|")
qz.c <- Corpus(VectorSource(qz.df$b))
inspect(qz.c[2])
qz.stripped <- tm_map(tm_map(tm_map(qz.c, removePunctuation), stripWhitespace), tolower)
qz.tdm<-TermDocumentMatrix(qz.stripped)
findFreqTerms(qz.tdm)
findFreqTerms(qz.tdm,10)
From: sheeila@gmx.ch
To: slinguist@hotmail.com
Subject: Zimmer zu vermieten
Date: Fri, 8 Mar 2013 06:45:10 +0100
Hallo Du 
Gerade habe ich  Dein Inserat gesehen. Ich würde mich sehr für das Zimmer interessieren. Ich wohne im Moment noch in Davos und werde aber am 12 April mein letzen Arbeitstag haben.
Ich bin mir unsicher was Du alles von mir wissen möchtest. Ich heisse Denise bin 34 Jahre alt und arbeite im Moment noch an einer Bar. Im Juli werde ich dann nach Hawaii reisen, deshalb brauche ich für die 3 Monate noch ein Zimmer.
Ich bin Nichtraucherin, eine ruhige Mieterin und wohne im Moment mit einer Kollegin zusammen in einer Wg. 
Ich würde mich freuen von Dir zu hören

Denise 
Date: Fri, 8 Mar 2013 06:45:10 +0100
findFreqTerms(qz.tdm,10)
findFreqTerms(qz.tdm,20)
findFreqTerms(qz.tdm,5)
findFreqTerms(qz.tdm,20)
findFreqTerms(qz.tdm,10)
save.image()
findAssocs(qz.tdm, "星期六", 0.2)
findAssocs(qz.tdm, "星期六", 0.3)
findAssocs(qz.tdm, "苏黎世", .4)
findAssocs(qz.tdm, "volunteer", .4)
findAssocs(qz.tdm, "volunteer", .3)
findAssocs(qz.tdm, "德语", .3)
findAssocs(qz.tdm, "德语", .2)
findAssocs(qz.tdm, "德", .2)
findAssocs(qz.tdm, "普通话", .2)
