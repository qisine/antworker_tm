ls(100)
ls(0)
ls(1)
ls(2)
df=data.frame(c("a","b","c","100"))
df
names(df)
names(df) = "x"
df
df$x
df$y = c(1:4)
df
df$y
ls(pattern="df")
ls(df)
ls(c(1,2))
help(ls)
ls()
ls
?ls
ls()
a<-'foo'
ls()
?sapply
lapply(df, FUN=function(e) { e })
ret<-lapply(df, FUN=function(e) { e })
class(ret)
ret<-sapply(df, FUN=function(e) { e })
class(ret)
ret
df
ret<-sapply(df, FUN=function(e) { e+1 })
sapply(df, FUN=function(e) { c(e, 'foo') })
sapply(df, FUN=function(e) { return c(e, 'foo') })
sapply(df, FUN=function(e) { 1 })
sapply(df, FUN=function(e) {  })
sapply(df, FUN=function(e) { e })
sapply(df, FUN=function(e) {  })
sapply(df$x, FUN=function(e) { e })
sapply(df$x, FUN=function(e) { e + "a" })
sapply(df$x, FUN=function(e) { paste(e, "a") })
sapply(df, FUN=function(e) { paste(e, "a") })
class(sapply(df, FUN=function(e) { paste(e, "a") }))
class(sapply(ls(), FUN=function(e) { paste("this: ", e)}))
class(sapply(ls(), FUN=function(e) { e}))
ls()
class(ls())
class(sapply(as.list(ls()), FUN=function(e) { e}))
class(sapply(as.matrix(ls()), FUN=function(e) { e}))
as.matrix(ls())
foo<-as.matrix(ls())
foo
class(sapply(as.matrix(ls()), FUN=function(e) { e }))
sapply(as.matrix(ls()), FUN=function(e) { e })
sapply(ls(), FUN=function(e) { e })
lapply(ls(), FUN=function(e) { e })
get(df)
get("df")
?t.test
t.test(c(53,22,43,95,51,41,55), mu=50)
t.test(c(53,22,43,95,51,41,55), mu=51)
t.test(c(53,22,43,95,51,41,55), mu=51.42857)
t.test(c(53,22,43,95,51,41,55), mu=50)
t.test(c(53,22,43,95,51,41,55, 60, 55, 49.5, 48), mu=50)
?axis
install.packages("ggplot")
install.packages("ggplot")
install.packages("ggplot2")
library("ggplot2")
ggplot(1:10)
ggplot(data=data.frame(x=0,y=0))
annotate('text', label='foo')
annotate('text', label='~sigma')
annotate('text', label='~sigma', parse=TRUE)
ggplot(data=data.frame(x=0,y=0)) + geom_point(aes(x=x,y=y))
?geom_point
?ggplot
?aes
df<-data.frame(a=c("foo","bar","baz"),b=1:3)
g<-ggplot(data=df)
g+geom_point()
g+geom_point(aes(a=x,b=x))
g+geom_point(aes(x=a,y=b))
as.matrix(1:3,c(5,3,66),c(10,15,0))
m<-as.matrix(1:3,c(5,3,66),c(10,15,0))
m
m<-as.matrix(1:3,c(5,3,66),c(10,15,0), ncol=3)
m
m<-as.matrix(rnorm(9), ncol=3)
m
m<-matrix(rnorm(9), ncol=3)
m
?rnorm
m
cov(m)
m<-m*10
m
m<-as.integer(m)
m
m<-matrix(rnorm(9), ncol=3)
m<-m*10
m
?ifelse
?if
?ifelse
help(if)
ifelse(m < 1, m*-1, m)
m<-ifelse(m < 1, m*-1, m)
m
cov(m)
cov(m[,2])
m[,2]
m[2,]
class(m[2,])
cov(as.matrix(m[,2]))
cov
rank(m)
rank(as.matrix(1:3))
?rank
m
cov(m)
?cov
cov(m[,2])
cov(as.matrix(m[,2]))
cov(as.matrix(m[,1]))
cov(m[,1],m[,2])
var(m[,3])
mean(m[,3])
m3<-m[,3]
mu<-mean(m3)
m3
(m3-mu)^2
sum((m3-mu)^2)
sum((m3-mu)^2)/3
sum((m3-mu)^2)/2
df<-read.csv("mt.txt")
df<-read.table("mt.txt")
source("mt.txt")
str(df)
class(df)
m<-df
head(m)
summary(m)
?pamk
library(fpc)
?pamk
source("mt.txt")
m<-df
pamk(m)
pamk(m[10,])
m[10,]
head(10)
head(m)
pamk(m[1:10,])
m[1:10,]
pamk(m[1:20,])
?sample
sample(1:3, 1, replace=TRUE)
sample(1:100, 1, replace=TRUE)
sample(1:100, 10, replace=TRUE)
which(m,sample(1:100,10,replace=FALSE))
which(m=sample(1:100,10,replace=FALSE))
?which
m[sample(1:100, 10, replace=TRUE)]
sample(1:100, 10, replace=TRUE)
m[sample(1:100, 10, replace=TRUE)]
m[sample(1:100, 10, replace=TRUE),]
m[sample(1:100, 10, replace=TRUE),]
m[sample(1:100, 20, replace=TRUE),]
pamk(m[sample(1:100, 20, replace=TRUE),])
pamk(m[sample(1:100, 20, replace=TRUE),1])
rs.fc=m[sample(1:100, 20, replace=TRUE),1]
cl=pamk(rs.fc)
cl.
cl
cl$pamobject
cl$pamobject$clustering
as.matrix(cl$pamobject$clustering)
m[as.matrix(cl$pamobject$clustering)]
m[as.matrix(cl$pamobject$clustering),]
rs.fc
rs
rs.fc
cl
cl$pamobject$clustering
rs.fc
cl=pamk(rs.fc,krange=3)
cl
cl$pamobject$clustering
rs.fc
x=c(-0.38848247,0.21655804,-1.08211969,0.00369104,0.0993393,0.25531731,
1.40574444,-1.80271115,-0.58780605,-0.35026458,0.67197532,-1.29654652,
-0.58874467,-0.4004176,1.46242829,0.83946654,-0.24861179,-1.604154,
1.53555232,1.45589014,-0.52092604,1.65504054,0.12854317,1.66771236,
1.47964458,-1.55677722,-0.40070632,-0.41957953,0.37803884,0.45349904,
1.18265468,1.43979945,-1.55395031,0.01054229,0.48887945,0.12949194,
-0.40283111,1.2998402,-1.02205575,-0.34370088,0.22117962,0.52840463,
-0.9584811,1.22482249,-1.51189671,0.372597,1.68446854,-0.74440632,
1.33920212,0.18072373,-0.35813474,0.39400846,1.18971633,1.02192759,
-1.90422461,0.18459334,0.18096905,-1.73870267,1.57349896,-1.05632536,
0.1864611,-1.49696658,0.51070568,-2.25007651,-0.64768552,1.80404194,
2.25164576,-0.07925576,-0.83550267,-1.65513631,0.25913869,0.36030077,
-0.09006407,-1.64359237,-0.1312756,-0.13790883,-0.09940115,-0.02089164,
-0.60924589,-0.05451811,2.11736111,-1.40329353,-0.71788744,-0.45888623,
-0.75608368,0.45762458,-0.24299548,-0.29224218,-1.0488731,-0.62028903,
-0.08257067,0.92297771,0.2964071,-0.02598973,-0.20439059,-0.25195469,
0.20572878,-0.49343988,0.25886695,1.20595313)
?structure
x
length(x)
density(x)
dty<-density(x)
class(dty)
?density
plot(dty)
plot(c)
c
x
plot(x)
plot(x,type="bar")
plot(ordered(x))
order(x)
ordered(x)
?order
?ordered
order(x)
x
order(c(3,1,2))
?order
order(c(3,1,2),decreasing=FALSE)
order(c(3,1,2),decreasing=TRUE)
?order
sort(x)
plot(sort(x))
plot(dty)
dty$bw
dty
plot(dty)
?nls
?do.call
?image
x<-c(5,3,1)
y<-c(99,5,15)
z<-(17,25,1)
z<-c(17,25,1)
image(x,y,z)
y<-c(10,45,99)
x<-c(1,33,56)
x
y
z<-c(17,25,83)
z
image(x,z,z)
z<-as.matrix(z)
z
image(x,z,z)
z(c(15,29,35,66), nrow=2, ncol=2)
z<-as.matrix(c(15,29,35,66), nrow=2, ncol=2)
z
z<-as.matrix(data.fram(c(15,29,c(35,66)), nrow=2, ncol=2)
z<-as.matrix(data.frame(c(15,29,c(35,66))), nrow=2, ncol=2)
z
z<-as.matrix(data.frame(c(15,29),c(35,66)), nrow=2, ncol=2)
z
image(x,z,z)
z<-as.matrix(data.frame(c(15,29,59),c(35,66,87)), nrow=2, ncol=2)
image(x,z,z)
x
z
x
y
?image
seq(3,4,5)
?seq
seq(1,3)
image(seq(1,3),seq(1,3),z)
z
image(seq(1,3),seq(1,3),z)
z[1,1]=28
z
image(seq(1,3),seq(1,3),z)
library(tm)
data<-read.csv("o.csv")
str(data)
summary(data)
names(data)
data<-read.csv("o.csv")
names(data)
data$t
data$d
d<-data
plot(d$d)
plot(d$d)
?ts
ts(d$d)
d.ts<-ts(d$d)
d.ts
d
d$d
d.ds<-ts(d$d, frequency=12)
d.ds
plot.ts(d.ts)
d.ds
plot.ts(d.ds)
d.ds<-ts(d$d, frequency=52)
plot.ts(d.ds)
d.ds
plot.ts(d.ss)
plot.ts(d.ts)
d.ts
d.ts[1:3]
d.ts[1:50]
d.ts[1,]
d.ts[1]
str(d)
d.c <- d
?as.POSIXct
as.POSIXct(d$d)
as.POSIXct.date(d$d)
as.POSIXct.default(d$d)
str(d)
strftime(d$d, "%d.%M.%Y, %H:%m")
?strftime
strftime(d$d, format="%d.%M.%Y, %H:%m")
?strftime
strptime(d$d, format="%d.%M.%Y, %H:%m")
strptime(d$d, format="%d.%m.%Y, %H:%M")
d.c<-strptime(d$d, format="%d.%m.%Y, %H:%M")
d.c[1]
class(d.c[1])
plot(d.c)
d.c<-d
d.c$d<-strptime(d$d, format="%d.%m.%Y, %H:%M")
head(d.c)
head(d.c$d)
head(d$d)
plot.ts(d.c)
plot.ts(d.c$d)
plot.ts(d.c$u)
plot(d)
plot(d.c)
plot(d.c$u)
table(d$u)
head(table(d$u))
sort(table(d$u))
plot(sort(table(d.c$d)))
table(d.c$d)
d.bm<-format.Date(d.c$d, format="%Y-%m")
d.bm
plot(d.bm)
barplot(d.bm)
barplot(d.bm, na.rm=TRUE)
plot(d.bm, na.rm=TRUE)
plot(max(d.bm, na.rm=TRUE))
plot(max(d.bm, na.rm=TRUE), type='h')
ma(d.bm,na.rm=TRUE)
max(d.bm,na.rm=TRUE)
d.c$d[!is.na[d.c$d]
d.c$d[!is.na[d.c$d]]
d.c$d[!is.na(d.c$d)]
plot(d.c$d[!is.na(d.c$d)])
d.bm<-d.c$d[!is.na(d.c$d)]
d.bm
plot(d.c$d[!is.na(d.c$d)])
plot(d.c$d[!is.na(d.c$d)], type="h")
plot(x=d.c$d[!is.na(d.c$d)], type="h")
plot(as.data.frame(d.c$d[!is.na(d.c$d)]), type="h")
plot(as.data.frame(d.c$d[!is.na(d.c$d)]), type="h")
format.Date(d.c$d, format="%Y-%m")
format.Date(d.bm, format="%Y-%m")
d.bm<-format.Date(d.bm, format="%Y-%m")
plot(d.bm)
plot(d.bm, type="h")
type(d.bm)
class(d.bm)
d.bm<-as.data.frame(d.bm)
plot(d.bm, type="h")
?plot
plot(d.bm)
library(tm)
Corpus(d.c)
Corpus(VectorSource(d.c))
d.corp<-Corpus(VectorSource(d.c))
d.corp
d.corp[1]
str(d.corp)
d.corp[[1]]
my.corpus=d.corp
my.rm.ws=tm_map(my.corpus,stripWhitespace)
my.rm.tl=tm_map(my.corpus,tolower)
my.rm.tl=tm_map(my.rm.ws,tolower)
my.rm.sw=tm_map(my.rm.tl,removeWords,stopwords("english"))
my.rm.stem=tm_map(my.rm.sw,stemDocument)
install.packages("snowball")
library(tm)
?load
load()
library(tm)
library(Snowball)
df<-read.csv("o.csv")
corp<-Corpus(DataframeSource(df))
corp
str(corp)
str(corp[1])
library(tm)
library(Snowball)
?DocumentTermMatrix
?termFreq
?scale
load(".RData")
my.nostop
library(Snowball)
library(tm)
stemDocument(my.nostop0
stemDocument(my.nostop)
my.nostop[2]
my.nostop[3]
TermDocumentMatrix(my.nostop[3])
TermDocumentMatrix(my.nostop[5])
my.stripped
my.stripped[1]
TermDocumentMatrix(my.stripped[1])
TermDocumentMatrix(my.stripped[10])
library(tm)
library(Snowball)
m.corpus <- Corpus(VectorSource(d.c$b))
m.corpus
m.corpus[1]
inspect(m.corpus[1])
m.stripped <- tm_map(tm_map(tm_map(m.corpus, removePunctuation), stripWhitespace), tolower)
m.nostop <- tm_map(m.stripped, removeWords, stopwords("english"))
inspect(m.nostop[1])
save.image()
m.stem=tm_map(m.nostop,stemDocument)

save.image()
m.dtm <- DocumentTermMatrix(m.stem)
m
m.dtm
save.image()
findFreqTerms(m.dtm)
head(findFreqTerms(m.dtm))
findFreqTerms(m.dtm)[1:50]
findFreqTerms(m.dtm, 50)
findFreqTerms(m.dtm, 30)
save.image()
findAssocs(m.dtm, "basel")
findAssocs(m.dtm, "basel", 0.8)
findAssocs(m.dtm, "basel", 0.5)
findAssocs(m.dtm, "bed", 0.8)
findAssocs(m.dtm, "bed", 0.1)
findAssocs(m.dtm, "bed", 0.5)
findAssocs(m.dtm, "bed", 0.4)
findAssocs(m.dtm, "ikea", 0.4)
findAssocs(m.dtm, "ikea", 0.3)
findAssocs(m.dtm, "basel", 0.4)
findAssocs(m.dtm, "basel", 0.3)
findAssocs(m.dtm, "basel", 0.2)
findAssocs(m.dtm, "computer", .4)
findAssocs(m.dtm, "pc", .4)
findAssocs(m.dtm, "laptop", .4)
findAssocs(m.dtm, "laptop", .5)
findAssocs(m.dtm, "mattress", .5)
findAssocs(m.dtm, "mattress", .4)
m.dtm2 <- removeSparseTerms(m.dtm, .4)
findFreqTerms(mm.dtm2, 50)
findFreqTerms(m.dtm2, 50)
findFreqTerms(m.dtm2, 40)
findFreqTerms(m.dtm2, 10)
findFreqTerms(m.dtm2, 1)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .2)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .1)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .9)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .8)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .6)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .7)
m.dtm2
findFreqTerms(m.dtm2,30)
findFreqTerms(m.dtm2,20)
findFreqTerms(m.dtm2,10)
findFreqTerms(m.dtm2,50)
findFreqTerms(m.dtm2,3)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .8)
m.dtm2
m.dtm2 <- removeSparseTerms(m.dtm, .9)
m.dtm2
m.dtm
m.dtm2
inspect(m.dtm2)
findFreqTerms(m.dtm2,1)
save.image()
m.dict<-Dictionary("bed", "chair", "mattress", "cat", "animal", "food", "closet", "bike", "carpet", "wardrobe", "shirt", "skirt")
m.dict<-Dictionary(c("bed", "chair", "mattress", "cat", "animal", "food", "closet", "bike", "carpet", "wardrobe", "shirt", "skirt"))
m.dtm2<-DocumentTermMatrix(m.stem, list(dictionary=m.dict))
m.dtm2
findFreqTerms(m.dtm2,1)
findFreqTerms(m.dtm2,5)
findFreqTerms(m.dtm2,10)
findFreqTerms(m.dtm2,20)
findAssocs("bed", .5)
findAssocs(m.dtm2, "bed", .5)
findAssocs(m.dtm2, "bed", .4)
findAssocs(m.dtm2, "bed", .3)
findAssocs(m.dtm2, "bed", .2)
save.image()
